#!/usr/bin/env ruby
# frozen_string_literal: true

# check numeric parameter
if ARGV[0].to_s !~ /^\d*$/
  puts 'Given parameter should be a number in the range (0..20)'
  exit(1)
end
# check parameter in valid range
offset = ARGV[0].to_i
if offset > 20
  puts 'Given parameter should be in the range (0..20)'
  exit(1)
end
# port definitions
ports = {
  mailcatcher_smtp: 1025,
  mailcatcher_web: 1080,
  postgres: 5432,
  puma: 3000,
  redis: 6379
}
# clean previous assignments in .env file
env_file = "#{Dir.pwd}/.devcontainer/.env"
new_env_lines = (File.readlines(env_file) rescue []) # rubocop:disable Style/RescueModifier
if File.exist?(env_file)
  new_env_lines = new_env_lines.reject{|l| l.match(/^PORTFWD_(#{ports.keys.map(&:upcase).join('|')})=/) }
  new_env_lines = new_env_lines.reject{|l| l.match(/^\s*$/) }
end
new_env_lines += ports.map{|service, port| "PORTFWD_#{service.upcase}=#{port + offset}" }
File.open(env_file, 'w') do |f|
  new_env_lines.sort.each{|line| f.puts line }
end
